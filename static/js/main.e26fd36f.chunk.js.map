{"version":3,"sources":["components/Title/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar/ProgressBar.js","components/UploadForm/UploadForm.js","hooks/useFirestore.js","components/ImageGrid/ImageGrid.js","components/Modal/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","acceptedTypes","title","type","onChange","e","selectedFile","target","files","includes","style","height","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImage","map","key","onClick","layout","whileHover","opacity","img","src","alt","transition","delay","Modal","selectedImage","classList","contains","setTimeout","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e26fd36f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"\">\n      <h1 className=\"text-center bg-blue-400 w-full text-white capitalize text-2xl font-bold py-2 sm:text-3xl md:text-4xl lg:text-5xl\">\n        Upload and share your pictures\n      </h1>\n      <p className=\"text-center mt-12 text-2xl text-blue-500 md:text-3xl lg:text-4xl\">\n        Your pictures\n      </p>\n    </div>\n  );\n};\n\nexport default Title;\n","import * as firebase from \"firebase\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC709UboGRfeHqfZ-xGh-vx2lO_Fi2raYk\",\n  authDomain: \"fir-gallery-9f74a.firebaseapp.com\",\n  databaseURL: \"https://fir-gallery-9f74a.firebaseio.com\",\n  projectId: \"fir-gallery-9f74a\",\n  storageBucket: \"fir-gallery-9f74a.appspot.com\",\n  messagingSenderId: \"88883198191\",\n  appId: \"1:88883198191:web:14f2f1216a4c4d5868831a\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\n// timestamp is a Function , we use it to create a new timestamp\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };\n","import { useEffect, useState } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from \"./../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    // create a reference for a new file in the storage to store my file , it's like allocating a place in the storageDB\n    const storageRef = projectStorage.ref(file.name);\n\n    // this collection if it doesn't exists firebase will created for us\n    const collectionRef = projectFirestore.collection(\"images\");\n\n    // upload file to the reference it uses callback functions not promises\n    // .on('state_changed) is a listener created by firebase\n    // (snap)  this snap parameter is a snapshot in time of the upload at that moment\n    storageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        // this is async code to get the url of the uploaded image in the storage\n        const url = await storageRef.getDownloadURL();\n        // the time of creating this record\n        const createdAt = timestamp();\n        // we use setUrl here to upload the link of the uploaded image to a database\n        collectionRef.add({ url: url, createdAt: createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useEffect } from \"react\";\nimport useStorage from \"../../hooks/useStorage\";\nimport { motion } from \"framer-motion\";\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div\n      className=\"bg-blue-300 h-1 mt-5\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + \"%\" }}\n    ></motion.div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from \"react\";\nimport ProgressBar from \"../ProgressBar/ProgressBar\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const acceptedTypes = [\"image/png\", \"image/jpeg\"];\n  const changeHandler = (e) => {\n    let selectedFile = e.target.files[0];\n    if (selectedFile && acceptedTypes.includes(selectedFile.type)) {\n      setFile(selectedFile);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select an image file (png or jpeg)\");\n    }\n  };\n  return (\n    <form className=\"mt-8 mb-2 mx-auto text-center\">\n      <label className=\"flex justify-center items-center w-8 h-8 text-blue-400 border-2 border-blue-400 my-2 mx-auto font-bold text-2xl rounded-full cursor-pointer hover:bg-blue-400 hover:text-white\">\n        <abbr title=\"upload a new image to gallery\" className=\"noo-underline\">\n          <input\n            className=\"h-0 w-0 opacity-0\"\n            type=\"file\"\n            onChange={changeHandler}\n          />\n          <span>+</span>\n        </abbr>\n      </label>\n      <div className=\"text-sm\" style={{ height: error ? \"\" : \"h-16\" }}>\n        {error && <div className=\"error\">{error}</div>}\n      </div>\n      {file && <div>{file.name}</div>}\n      <div className=\"max-w-90% mx-auto\">\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useEffect, useState } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    // projectFirestore.collection(....) will give us a specific collection from DB\n    // onSnapshot will fire a callback FN whenever a change is made in the collection and also when it's initialize everything\n    // onSnapshot will subscribe to a listener in the DB, this listener will update our component whenever he change\n    // orderBy will from Firebase will do the ordering from the new added item to the old\n    // projectFirestore.collection() will return for us a FN, that FN will unsubscribe from the document listener if we executed\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let documents = [];\n        // forEach here is a Firebase FN not the Array Method\n        // .data() is a Firebase FN to convert the SnapShot object\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n","import React from \"react\";\nimport useFirestore from \"../../hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setSelectedImage }) => {\n  const { docs } = useFirestore(\"images\");\n  return (\n    <div className=\"grid gap-3 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\n      {docs &&\n        docs.map((doc) => {\n          return (\n            <motion.div\n              className=\"p-4 cursor-pointer w-full h-80 opacity-75\"\n              key={doc.id}\n              onClick={() => setSelectedImage(doc.url)}\n              layout\n              whileHover={{ opacity: 1 }}\n            >\n              <motion.img\n                className=\"w-full h-full object-cover shadow-2xl\"\n                src={doc.url}\n                alt=\"img\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 1 }}\n              />\n            </motion.div>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n\n// import React from \"react\";\n// import useFirestore from \"../../hooks/useFirestore\";\n// import { motion } from \"framer-motion\";\n\n// const ImageGrid = ({ setSelectedImage }) => {\n//   const { docs } = useFirestore(\"images\");\n//   return (\n//     <div className=\"my-5 mx-auto grid grid-cols-3 gap-10\">\n//       {docs &&\n//         docs.map((doc) => {\n//           return (\n//             <motion.div\n//               className=\"overflow-hidden h-0 py-50% mx-0 relative opacity-75  cursor-pointer\"\n//               key={doc.id}\n//               onClick={() => setSelectedImage(doc.url)}\n//               layout\n//               whileHover={{ opacity: 1 }}\n//             >\n//               <motion.img\n//                 className=\"min-w-full min-h-full absolute top-0 left-0 object-cover\"\n//                 src={doc.url}\n//                 alt=\"img\"\n//                 initial={{ opacity: 0 }}\n//                 animate={{ opacity: 1 }}\n//                 transition={{ delay: 1 }}\n//               />\n//             </motion.div>\n//           );\n//         })}\n//     </div>\n//   );\n// };\n\n// export default ImageGrid;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Modal = ({ selectedImage, setSelectedImage }) => {\n  const toggleBackdrop = (e) => {\n    if (e.target.classList.contains(\"backdrop\")) {\n      e.target.classList.add(\"hideBackdrop\");\n      setTimeout(() => {\n        setSelectedImage(null);\n      }, 300);\n    }\n  };\n  return (\n    <>\n      {selectedImage && (\n        <motion.div\n          className=\"backdrop fixed top-0 left-0 w-full h-full bg-backdrop\"\n          onClick={toggleBackdrop}\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n        >\n          {selectedImage && (\n            <motion.img\n              className=\"block max-w-60% max-h-80% my-16 mx-auto shadow-md border-4 border-white\"\n              src={selectedImage}\n              alt=\"img\"\n              initial={{ y: \"-100vh\" }}\n              animate={{ y: \"0\" }}\n            />\n          )}\n        </motion.div>\n      )}\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Title from \"./components/Title/Title\";\nimport UploadForm from \"./components/UploadForm/UploadForm\";\nimport ImageGrid from \"./components/ImageGrid/ImageGrid\";\nimport Modal from \"./components/Modal/Modal\";\n\nfunction App() {\n  const [selectedImage, setSelectedImage] = useState(null);\n  return (\n    <div>\n      <Title />\n      <div className=\"max-w-6xl mx-auto\">\n        <UploadForm />\n        <ImageGrid setSelectedImage={setSelectedImage} />\n        <Modal\n          selectedImage={selectedImage}\n          setSelectedImage={setSelectedImage}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./assets/css/main.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}